[{"path":"http://joeymays.xyz/CNweaveR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 CNweaveR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://joeymays.xyz/CNweaveR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joseph Mays. Author, maintainer.","code":""},{"path":"http://joeymays.xyz/CNweaveR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mays J (2023). CNweaveR: DNA Copy Number Analysis Genome-wide Tapestri Panels. https://github.com/joeymays/CNweaveR, http://joeymays.xyz/CNweaveR/.","code":"@Manual{,   title = {CNweaveR: DNA Copy Number Analysis for Genome-wide Tapestri Panels},   author = {Joseph Mays},   year = {2023},   note = {https://github.com/joeymays/CNweaveR, http://joeymays.xyz/CNweaveR/}, }"},{"path":"http://joeymays.xyz/CNweaveR/index.html","id":"cnweaver","dir":"","previous_headings":"","what":"DNA Copy Number Analysis for Genome-wide Tapestri Panels","title":"DNA Copy Number Analysis for Genome-wide Tapestri Panels","text":"CNweaveR enables basic analysis CNVs using custom genome-wide targeted DNA sequencing panels Mission Bio Tapestri system.","code":""},{"path":"http://joeymays.xyz/CNweaveR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"DNA Copy Number Analysis for Genome-wide Tapestri Panels","text":"can install development version CNweaveR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"joeymays/CNWeaveR\")"},{"path":[]},{"path":"http://joeymays.xyz/CNweaveR/index.html","id":"data-import","dir":"","previous_headings":"Basic Usage","what":"Data Import","title":"DNA Copy Number Analysis for Genome-wide Tapestri Panels","text":"practice, dataset imported .h5 file generated Tapestri Pipeline. ’ll use toy dataset example. Calling TapestriExperiment print summary contained data.","code":"library(CNweaveR) library(forcats) ## NOT RUN example.exp <- createTapestriExperiment(h5.filename) example.exp <- newTapestriExperimentExample() #> ℹ Moving gRNA probe  to altExp slot 'grnaCounts'. #> ℹ Moving barcode probe  to altExp slot 'barcodeCounts'. #> ℹ Moving chrY probe(s) probe_231, probe_232, probe_233, probe_234, probe_235, probe_236, probe_237, probe_238, probe_239, probe_240 to altExp slot 'chrYCounts'. example.exp #> class: TapestriExperiment  #> dim: 230 300  #> metadata(7): sample.name pipeline.panel.name ... date.h5.created #>   mean.reads.per.cell.per.probe #> assays(1): counts #> rownames(230): probe_1 probe_2 ... probe_229 probe_230 #> rowData names(5): probe.id chr arm total.reads median.reads #> colnames(300): cell_1 cell_2 ... cell_299 cell_300 #> colData names(3): cell.barcode test.cluster total.reads #> reducedDimNames(0): #> mainExpName: CNV #> altExpNames(2): chrYCounts alleleFrequency #> barcodeProbe: dummyBCprobe #> grnaProbe: dummyGRNAprobe"},{"path":"http://joeymays.xyz/CNweaveR/index.html","id":"clustering","dir":"","previous_headings":"Basic Usage","what":"Clustering","title":"DNA Copy Number Analysis for Genome-wide Tapestri Panels","text":"cluster allele frequency partition different cell lines represented experiment. First, run PCA use knee plot identify PCs accounting variation dataset.  Run UMAP top PCs.  Run runClustering() cluster dbscan. Visualize UMAP, using “cluster” label color.  Rename cluster labels renaming factor levels “cluster”. forcats package makes easy.","code":"example.exp <- runPCA(example.exp) PCAKneePlot(example.exp) example.exp <- runUMAP(example.exp, pca.dims = 1:2) #> ℹ Running UMAP on: alleleFrequency. reducedDimPlot(example.exp, dim.reduction = \"umap\") example.exp <- runClustering(example.exp, eps = 0.9) #> ℹ Finding clusters in: alleleFrequency UMAP reducedDimPlot(example.exp, dim.reduction = \"umap\", group.label = \"cluster\") colData(example.exp)$cluster <- forcats::fct_recode(colData(example.exp)$cluster, cellline1 = \"1\", cellline2 = \"2\", cellline3 = \"3\")"},{"path":"http://joeymays.xyz/CNweaveR/index.html","id":"copy-number-calculation","dir":"","previous_headings":"","what":"Copy Number Calculation","title":"DNA Copy Number Analysis for Genome-wide Tapestri Panels","text":"Normalize counts calculate copy number relative cellline 3, diploid. control.copy.number gives cluster label copy number value normalize chromosome arm . Visualize copy number. Visualization reveals cell line 1 1 copy chromosome arm 1p, cell line 2 three copies chromosome 7.   Visualize chrY counts. Visualization reveals cellline 2 chr Y therefore male, two cell lines female.","code":"example.exp <- calcNormCounts(example.exp) control.copy.number <- generateControlCopyNumberTemplate(example.exp, sample.feature.label = \"cellline3\", copy.number = 2) example.exp <- calcCopyNumber(example.exp, control.copy.number = control.copy.number, sample.feature = \"cluster\") example.exp <- calcSmoothCopyNumber(example.exp) #> ℹ Smoothing copy number by median... #> ✔ Smoothing copy number by median... [1.6s] #> assayHeatmap(example.exp, assay = \"copyNumber\", split.col.by = \"arm\", split.row.by = \"cluster\", annotate.row.by = \"cluster\", color.preset = \"copy.number\") assayHeatmap(example.exp, alt.exp = \"smoothedCopyNumberByArm\", assay = \"discreteCopyNumber\", split.row.by = \"cluster\", annotate.row.by = \"cluster\", color.preset = \"copy.number\") assayBoxPlot(example.exp, alt.exp = \"chrYCounts\", split.features = TRUE, split.x.by = \"cluster\")"},{"path":"http://joeymays.xyz/CNweaveR/reference/CNweaveR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"CNweaveR: DNA Copy Number Analysis for Genome-wide Tapestri Panels — CNweaveR-package","title":"CNweaveR: DNA Copy Number Analysis for Genome-wide Tapestri Panels — CNweaveR-package","text":"CNweaveR enables analysis DNA copy number variants (CNVs) thousands single cells, using custom genome-wide targeted DNA sequencing panels Mission Bio Tapestri platform. package allows users easily parse, manipulate, visualize datasets produced automated Tapestri Pipeline, support normalization, clustering, copy number calling. Functions also available deconvolute multiplexed samples genotype parsing barcoded reads exogenous lentiviral constructs.","code":""},{"path":[]},{"path":"http://joeymays.xyz/CNweaveR/reference/CNweaveR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CNweaveR: DNA Copy Number Analysis for Genome-wide Tapestri Panels — CNweaveR-package","text":"Maintainer: Joseph Mays josephcmays@gmail.com (ORCID)","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/CreateTapestriExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Create TapestriExperiment object from Tapestri Pipeline output — createTapestriExperiment","title":"Create TapestriExperiment object from Tapestri Pipeline output — createTapestriExperiment","text":"createTapestriExperiment() constructs TapestriExperiment container object data stored .h5 file output Tapestri Pipeline. Read count matrix (probe x cell barcode) stored \"counts\" assay slot top-level experiment. Allele frequency matrix (variant x cell barcode) stored \"alleleFrequency\" assay slot \"alleleFrequency\" altExp (alternative experiment) slot. panel.id optional shortcut set special probe identities specific custom panels.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/CreateTapestriExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create TapestriExperiment object from Tapestri Pipeline output — createTapestriExperiment","text":"","code":"createTapestriExperiment(   h5.filename,   panel.id = NULL,   get.cytobands = TRUE,   genome = \"hg19\",   move.non.genome.probes = TRUE,   filter.variants = TRUE,   verbose = TRUE )"},{"path":"http://joeymays.xyz/CNweaveR/reference/CreateTapestriExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create TapestriExperiment object from Tapestri Pipeline output — createTapestriExperiment","text":"h5.filename File path .h5 file Tapestri Pipeline output. panel.id Character, Tapestri panel ID, either CO261, CO293, CO610, NULL. Initializes barcodeProbe grnaProbe slots. Default NULL. get.cytobands Logical, TRUE (default), retrieve add chromosome cytobands chromosome arms rowData (probe metadata). genome Character, reference genome pulling cytoband coordinates chromosome arm labels (see getCytobands()). \"hg19\" (default) currently supported. move.non.genome.probes Logical, TRUE (default), move counts metadata non-genomic probes altExp slots (see moveNonGenomeProbes()). filter.variants Logical, TRUE (default), stores variants passed Tapestri Pipeline filters. verbose Logical, TRUE (default), metadata output message text.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/CreateTapestriExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create TapestriExperiment object from Tapestri Pipeline output — createTapestriExperiment","text":"TapestriExperiment object containing data Tapestri Pipeline output.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/CreateTapestriExperiment.html","id":"panel-id-shortcuts","dir":"Reference","previous_headings":"","what":"Panel ID Shortcuts","title":"Create TapestriExperiment object from Tapestri Pipeline output — createTapestriExperiment","text":"panel.id optional shortcut set barcodeProbe grnaProbe slots TapestriExperiment specific custom Tapestri panels.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/CreateTapestriExperiment.html","id":"co-","dir":"Reference","previous_headings":"","what":"CO261","title":"Create TapestriExperiment object from Tapestri Pipeline output — createTapestriExperiment","text":"barcodeProbe = \"specified\" grnaProbe = \"specified\"","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/CreateTapestriExperiment.html","id":"co--1","dir":"Reference","previous_headings":"","what":"CO293","title":"Create TapestriExperiment object from Tapestri Pipeline output — createTapestriExperiment","text":"barcodeProbe = \"AMPL205334\" grnaProbe = \"AMPL205666\"","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/CreateTapestriExperiment.html","id":"co--2","dir":"Reference","previous_headings":"","what":"CO610","title":"Create TapestriExperiment object from Tapestri Pipeline output — createTapestriExperiment","text":"barcodeProbe = \"CO610_AMP351\" grnaProbe = \"CO610_AMP350\"","code":""},{"path":[]},{"path":"http://joeymays.xyz/CNweaveR/reference/CreateTapestriExperiment.html","id":"raw-data","dir":"Reference","previous_headings":"","what":"Raw Data","title":"Create TapestriExperiment object from Tapestri Pipeline output — createTapestriExperiment","text":"Read count allele frequency matrices imported appropriate slots described . filter.variants == TRUE (default) loads allele frequency variants passed internal filters Tapestri Pipeline. greatly reduces number variants tens thousands hundreds likely consequential variants, saving RAM reducing operation time.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/CreateTapestriExperiment.html","id":"metadata","dir":"Reference","previous_headings":"","what":"Metadata","title":"Create TapestriExperiment object from Tapestri Pipeline output — createTapestriExperiment","text":"Several metadata sets copied generated stored appropriate TapestriExperiment slot construction. Probe panel metadata stored .h5 file copied rowData. Basic QC stats (e.g. total number reads per probe) added rowData. Basic QC stats (e.g. total number reads per cell barcode) added colData. Experiment-level metadata stored metadata.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/CreateTapestriExperiment.html","id":"optional-operations","dir":"Reference","previous_headings":"","what":"Optional Operations","title":"Create TapestriExperiment object from Tapestri Pipeline output — createTapestriExperiment","text":"Two additional major operations called default TapestriExperiment construction convenience. get.cytobands == TRUE (default) calls getCytobands(), retrieves chromosome arm cytoband probe based stored positional data saves rowData. downstream smoothing plotting functions may fail chromosome arms present rowData, generally always run. move.non.genome.probes calls moveNonGenomeProbes(), moves probes corresponding specified tags altExp (alternative experiment) slots TapestriExperiment object. exception probes chromosome Y; CNVs chrY rare, move altExp separate analysis. Probes corresponding barcodeProbe grnaProbe slots, specified panel.id shortcut manually (see Custom Slot Getters Setters), automatically moved altExp operation well. probes present, function generate warning message, always safe (recommended) run default. remaining probes targeting human chromosome specified shortcut tags moved otherProbeCounts slot.","code":""},{"path":[]},{"path":"http://joeymays.xyz/CNweaveR/reference/CreateTapestriExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create TapestriExperiment object from Tapestri Pipeline output — createTapestriExperiment","text":"","code":"if (FALSE) { tapExperiment <- createTapestriExperiment(\"myh5file.h5\", \"CO293\") }"},{"path":"http://joeymays.xyz/CNweaveR/reference/PCAKneePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of PCA proportion of variance explained — PCAKneePlot","title":"Plot of PCA proportion of variance explained — PCAKneePlot","text":"Draws \"knee plot\" PCA proportion variance explained determine principal components (PCs) include downstream applications e.g. clustering. Variance explained PC indicated line. Cumulative variance explained indicated bars.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/PCAKneePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of PCA proportion of variance explained — PCAKneePlot","text":"","code":"PCAKneePlot(TapestriExperiment, alt.exp = \"alleleFrequency\", n.pcs = 10)"},{"path":"http://joeymays.xyz/CNweaveR/reference/PCAKneePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of PCA proportion of variance explained — PCAKneePlot","text":"TapestriExperiment TapestriExperiment object alt.exp Character, altExp use, NULL uses top-level/main experiment. Default \"alleleFrequency\". n.pcs Numeric, number PCs plot, starting 1. Default 10.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/PCAKneePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot of PCA proportion of variance explained — PCAKneePlot","text":"ggplot2 object, combined line plot bar graph","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/PCAKneePlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot of PCA proportion of variance explained — PCAKneePlot","text":"","code":"if (FALSE) { PCAKneePlot(TapestriExperiment, n.pcs = 5) }"},{"path":"http://joeymays.xyz/CNweaveR/reference/TapestriExperiment-class.html","id":null,"dir":"Reference","previous_headings":"","what":"TapestriExperiment Class Definition — TapestriExperiment-class","title":"TapestriExperiment Class Definition — TapestriExperiment-class","text":"TapestriExperiment Class Definition","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/TapestriExperiment-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TapestriExperiment Class Definition — TapestriExperiment-class","text":"","code":"# S4 method for TapestriExperiment show(object)"},{"path":"http://joeymays.xyz/CNweaveR/reference/TapestriExperiment-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TapestriExperiment Class Definition — TapestriExperiment-class","text":"object R object TapestriExperiment TapestriExperiment object","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/TapestriExperiment-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TapestriExperiment Class Definition — TapestriExperiment-class","text":"TapestriExperiment","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/TapestriExperiment-class.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"TapestriExperiment Class Definition — TapestriExperiment-class","text":"show(TapestriExperiment): Show method TapestriExperiment","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/TapestriExperiment-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"TapestriExperiment Class Definition — TapestriExperiment-class","text":"barcodeProbe character. grnaProbe character.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/TapestriExperiment-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TapestriExperiment Class Definition — TapestriExperiment-class","text":"","code":"tapExpObject <- new(\"TapestriExperiment\")"},{"path":"http://joeymays.xyz/CNweaveR/reference/assayBoxPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a box plot from assay data — assayBoxPlot","title":"Generate a box plot from assay data — assayBoxPlot","text":"Draws box plot data indicated TapestriExperiment assay slot. especially useful visualizing altExp count data, counts probes chrY barcode probe counts.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/assayBoxPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a box plot from assay data — assayBoxPlot","text":"","code":"assayBoxPlot(   TapestriExperiment,   alt.exp = NULL,   assay = NULL,   log.y = TRUE,   split.features = FALSE,   split.x.by = NULL,   split.y.by = NULL )"},{"path":"http://joeymays.xyz/CNweaveR/reference/assayBoxPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a box plot from assay data — assayBoxPlot","text":"TapestriExperiment TapestriExperiment object alt.exp Character, altExp plot. NULL (default) uses top-level experiment TapestriExperiment. assay Character, assay plot. NULL (default) selects first assay listed TapestriExperiment. log.y Logical, TRUE, scales data using log1p(). Default TRUE. split.features Logical, TRUE, splits plot rowData features slot one row feature/probe. Default FALSE. split.x.Character, colData column use X-axis categories. Default NULL. split.y.Character, colData column use Y-axis splitting/faceting. Default NULL.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/assayBoxPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a box plot from assay data — assayBoxPlot","text":"ggplot object","code":""},{"path":[]},{"path":"http://joeymays.xyz/CNweaveR/reference/assayBoxPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a box plot from assay data — assayBoxPlot","text":"","code":"if (FALSE) { assayBoxPlot(TapestriExperiment, \"chrYCounts\",   assay = \"counts\",   split.features = TRUE, split.x.by = \"cluster\" ) }"},{"path":"http://joeymays.xyz/CNweaveR/reference/assayHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate heatmap of assay data — assayHeatmap","title":"Generate heatmap of assay data — assayHeatmap","text":"Creates heatmap data indicated TapestriObject assay slot using ComplexHeatmap package. Heatmaps generated transposed (.e. x-y flipped) representations assay matrix. Additional ComplexHeatmap::Heatmap() parameters can passed overwrite defaults.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/assayHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate heatmap of assay data — assayHeatmap","text":"","code":"assayHeatmap(   TapestriExperiment,   alt.exp = NULL,   assay = NULL,   split.col.by = NULL,   split.row.by = NULL,   annotate.row.by = NULL,   color.preset = NULL,   color.custom = NULL,   ... )"},{"path":"http://joeymays.xyz/CNweaveR/reference/assayHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate heatmap of assay data — assayHeatmap","text":"TapestriExperiment TapestriExperiment object alt.exp Character, altExp slot use. NULL (default) uses top-level/main experiment. assay Character, assay slot use. NULL (default) uses first-indexed assay (usually \"counts\"). split.col.Character, rowData column split columns , .e. \"chr\" \"arm\". Default NULL. split.row.Character, colData column split rows , .e. \"cluster\". Default NULL. annotate.row.Character, colData column use block annotation. Default NULL. color.preset Character, color preset use heatmap color, either \"copy.number\" \"copy.number.denoise\" (see Details). Overrides color.custom. NULL (default) uses default ComplexHeatmap coloring. color.custom Color mapping function given circlize::colorRamp2(). color.preset must NULL. ... Additional parameters pass ComplexHeatmap::Heatmap().","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/assayHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate heatmap of assay data — assayHeatmap","text":"ComplexHeatmap object","code":""},{"path":[]},{"path":"http://joeymays.xyz/CNweaveR/reference/assayHeatmap.html","id":"-copy-number-","dir":"Reference","previous_headings":"","what":"\"copy.number\"","title":"Generate heatmap of assay data — assayHeatmap","text":"Blue-white-red gradient 0-2-4. 4 8+ red-black gradient.","code":"circlize::colorRamp2(c(0,1,2,3,4,8), c('#2c7bb6','#abd9e9','#ffffff','#fdae61','#d7191c', \"black\"))"},{"path":"http://joeymays.xyz/CNweaveR/reference/assayHeatmap.html","id":"-copy-number-denoise-","dir":"Reference","previous_headings":"","what":"\"copy.number.denoise\"","title":"Generate heatmap of assay data — assayHeatmap","text":"Similar 'copy.number' present, white range 1.5-2.5 reduce appearance noise around diploid cells.","code":"circlize::colorRamp2(c(0,1,1.5,2,2.5,3,4,8), c('#2c7bb6','#abd9e9','#ffffff','#ffffff','#ffffff','#fdae61','#d7191c', \"black\"))"},{"path":[]},{"path":"http://joeymays.xyz/CNweaveR/reference/assayHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate heatmap of assay data — assayHeatmap","text":"","code":"if (FALSE) { assayHeatmap(TapestriExperiment,   alt.exp = \"smoothedCopyNumberByArm\",   assay = \"discreteCopyNumber\", split.row.by = \"cluster\" ) }"},{"path":"http://joeymays.xyz/CNweaveR/reference/calcCopyNumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate relative copy number value for each cell-probe unit using reference sample — calcCopyNumber","title":"Calculate relative copy number value for each cell-probe unit using reference sample — calcCopyNumber","text":"calcCopyNumber() transforms normalized count matrix normcounts TapestriExperiment object copy number values based set reference cell barcodes given copy number value (e.g. 2 diploid). practically used set median copy number usually diploid reference cell population known copy number value, e.g. 2, calculate copy number cells relative reference population. occurs individually probe, result one copy number value per cell barcode per probe (cell-probe unit). control.copy.number data.frame lookup table used indicate copy number value cell barcodes use reference. template control.copy.number can generated using generateControlCopyNumberTemplate(), row chromosome arm represented TapestriExperiment. control.copy.number data.frame include 3 columns named arm, copy.number, sample.label. arm chromosome arm names chr1p chrXq, copy.number reference copy number value (2 = diploid), sample.label value corresponding colData column given sample.feature indicate set reference cell barcodes use set copy number. best used workflow cells clustered first respective samples, one cluster used reference population clusters. also allows baseline copy number set chromosome arm individually case reference population completely diploid.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/calcCopyNumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate relative copy number value for each cell-probe unit using reference sample — calcCopyNumber","text":"","code":"calcCopyNumber(   TapestriExperiment,   control.copy.number,   sample.feature = \"cluster\",   remove.bad.probes = FALSE )  generateControlCopyNumberTemplate(   TapestriExperiment,   copy.number = 2,   sample.feature.label = NA )"},{"path":"http://joeymays.xyz/CNweaveR/reference/calcCopyNumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate relative copy number value for each cell-probe unit using reference sample — calcCopyNumber","text":"TapestriExperiment TapestriExperiment object. control.copy.number data.frame columns arm, copy.number, sample.label. See details. sample.feature Character, colData column use subsetting cell.barcodes. Default \"cluster\". remove.bad.probes Logical, TRUE, probes median normalized counts = 0 removed returned TapestriExperiment. FALSE (default), probes median normalized counts = 0 throw error stop function. copy.number Numeric, sets entries copy.number column output. Default 2 (diploid). sample.feature.label Character, sets entries sample.label column output.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/calcCopyNumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate relative copy number value for each cell-probe unit using reference sample — calcCopyNumber","text":"TapestriExperiment object cell-probe copy number values copyNumber assay slot. data.frame 3 columns named arm, copy.number, sample.label","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/calcCopyNumber.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Calculate relative copy number value for each cell-probe unit using reference sample — calcCopyNumber","text":"generateControlCopyNumberTemplate(): generates data.frame template control.copy.number calcCopyNumber().","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/calcCopyNumber.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate relative copy number value for each cell-probe unit using reference sample — calcCopyNumber","text":"","code":"if (FALSE) { control.copy.number <- generateControlCopyNumberTemplate() TapestriExperiment <- calcCopyNumber(TapestriExperiment,   control.copy.number,   sample.feature = \"cluster\" ) }"},{"path":"http://joeymays.xyz/CNweaveR/reference/calcGMMCopyNumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Call copy number for each cell-chromosome using Gaussian mixture models — calcGMMCopyNumber","title":"Call copy number for each cell-chromosome using Gaussian mixture models — calcGMMCopyNumber","text":"Uses control cells simulate expected smoothed copy number distributions chromosomes across model.components (copy number level). uses distributions calculate posterior probabilities cell-chromosome belonging copy number level. cell-chromosome assigned copy number value posterior probability highest. done whole chromosomes chromosome arms.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/calcGMMCopyNumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call copy number for each cell-chromosome using Gaussian mixture models — calcGMMCopyNumber","text":"","code":"calcGMMCopyNumber(   TapestriExperiment,   cell.barcodes,   control.copy.number,   model.components = 1:5,   model.priors = NULL,   ... )"},{"path":"http://joeymays.xyz/CNweaveR/reference/calcGMMCopyNumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call copy number for each cell-chromosome using Gaussian mixture models — calcGMMCopyNumber","text":"TapestriExperiment TapestriExperiment object. cell.barcodes character, vector cell barcodes fit GMM. Usually corresponds diploid control. control.copy.number data.frame columns arm copy.number, indicating known copy number cells cell.barcodes. model.components numeric, vector copy number GMM components calculate, default 1:5 (copy number = 1, 2, 3, 4, 5). model.priors numeric, relative prior probabilities GMM component. NULL (default), assumes equal priors. ... Additional parameters passed internal functions.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/calcGMMCopyNumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call copy number for each cell-chromosome using Gaussian mixture models — calcGMMCopyNumber","text":"TapestriExperiment object copy number calls based calculated GMMs, saved gmmCopyNumber slot smoothedCopyNumberByChr smoothedCopyNumberByArm altExps. GMM parameters feature.id saved metadata slot.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/calcGMMCopyNumber.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call copy number for each cell-chromosome using Gaussian mixture models — calcGMMCopyNumber","text":"","code":"if (FALSE) { control.copy.number <- generateControlCopyNumberTemplate(TapestriExperiment, 2) TapestriExperiment <- calcGMMCopyNumber(TapestriExperiment,   cell.barcodes = colnames(TapestriExperiment),   control.copy.number = control.copy.number,   model.components = 1:5,   model.priors = c(1, 1, 1, 1, 1) ) }"},{"path":"http://joeymays.xyz/CNweaveR/reference/calcNormCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize raw counts — calcNormCounts","title":"Normalize raw counts — calcNormCounts","text":"Normalizes raw counts counts slot TapestriExperiment returns object normalized counts normcounts slot. Also calculates standard deviation probe using normalized counts adds rowData.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/calcNormCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize raw counts — calcNormCounts","text":"","code":"calcNormCounts(TapestriExperiment, method = \"mb\", scaling.factor = NULL)"},{"path":"http://joeymays.xyz/CNweaveR/reference/calcNormCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize raw counts — calcNormCounts","text":"TapestriExperiment TapestriExperiment object. method Character, normalization method. Default \"mb\". scaling.factor Numeric, optional number scale normalized counts method == \"libNorm\". Default NULL.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/calcNormCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize raw counts — calcNormCounts","text":"TapestriExperiment object normalized counts added normcounts slot.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/calcNormCounts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalize raw counts — calcNormCounts","text":"\"mb\" method performs normalization scheme Mission Bio's mosaic package python: Counts barcode normalized relative barcode's mean probe counts normalized relative probe's median. \"libNorm\" method preforms library size normalization, returning proportion counts probe within cell. proportion multiplied scaling.factor provided.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/calcNormCounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize raw counts — calcNormCounts","text":"","code":"if (FALSE) { TapestriExperiment <- calcNormCounts(TapestriExperiment) }"},{"path":"http://joeymays.xyz/CNweaveR/reference/calcSmoothCopyNumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooth copy number values across chromosomes and chromosome arms — calcSmoothCopyNumber","title":"Smooth copy number values across chromosomes and chromosome arms — calcSmoothCopyNumber","text":"calcSmoothCopyNumber() takes copyNumber slot values probes chromosome smooths median (default) chromosome chromosome arm, resulting one copy number value per chromosome chromosome arm cell barcode. Cell-chromosome values discretized integers conventional rounding (1.5 <= x < 2.5 rounds 2). Smoothed copy number discretized smoothed copy number values stored smoothedCopyNumber discreteCopyNumber assays, altExp slots smoothedCopyNumberByChr chromosome-level smoothing, smoothedCopyNumberByArm chromosome arm-level smoothing.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/calcSmoothCopyNumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooth copy number values across chromosomes and chromosome arms — calcSmoothCopyNumber","text":"","code":"calcSmoothCopyNumber(TapestriExperiment, method = \"median\")"},{"path":"http://joeymays.xyz/CNweaveR/reference/calcSmoothCopyNumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooth copy number values across chromosomes and chromosome arms — calcSmoothCopyNumber","text":"TapestriExperiment TapestriExperiment object. method Character, smoothing method: median (default) mean.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/calcSmoothCopyNumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Smooth copy number values across chromosomes and chromosome arms — calcSmoothCopyNumber","text":"TapestriExperiment smoothedCopyNumber discreteCopyNumber assays altExp slots smoothedCopyNumberByChr smoothedCopyNumberByArm.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/calcSmoothCopyNumber.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Smooth copy number values across chromosomes and chromosome arms — calcSmoothCopyNumber","text":"","code":"if (FALSE) { TapestriExperiment <- calcSmoothCopyNumber(TapestriExperiment) }"},{"path":"http://joeymays.xyz/CNweaveR/reference/callSampleLables.html","id":null,"dir":"Reference","previous_headings":"","what":"Call sample labels based on feature counts — callSampleLables","title":"Call sample labels based on feature counts — callSampleLables","text":"callSampleLables() assigns labels (stored colData column) cells using feature count data colData. useful assigning barcode labels based barcoded reads (see countBarcodedReads). method = max, labels dictated whichever input.features column highest number counts. default, ties broken choosing whichever label lowest index position (ties.method = \"first\"). Samples 0 counts input.features columns labeled according neg.label. one feature column used, labels assigned cells counts > min.count.threshold, neg.label otherwise.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/callSampleLables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call sample labels based on feature counts — callSampleLables","text":"","code":"callSampleLables(   TapestriExperiment,   input.features,   output.feature = \"sample.call\",   return.table = FALSE,   neg.label = NA,   method = \"max\",   ties.method = \"first\",   min.count.threshold = 1 )"},{"path":"http://joeymays.xyz/CNweaveR/reference/callSampleLables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call sample labels based on feature counts — callSampleLables","text":"TapestriExperiment TapestriExperiment object. input.features Character vector, column names colData evaluate. output.feature Character, column name use call output. Default \"sample.call\". return.table Logical, TRUE, returns data.frame sample.calls. FALSE (default), returns updated TapestriExperiment object. neg.label Character, label samples counts. Default NA. method Character, call method. \"max\" currently supported, calls based whichever input.features column counts. ties.method Character, passed max.col() indicating break ties. Default \"first\". min.count.threshold Numeric, minimum number counts per cell use call. Default 1.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/callSampleLables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call sample labels based on feature counts — callSampleLables","text":"TapestriExperiment object sample calls added colData column sample.name. return.table == TRUE, data.frame sample calls.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/callSampleLables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call sample labels based on feature counts — callSampleLables","text":"","code":"if (FALSE) { TapestriExperiment <- callSampleLables(TapestriExperiment,   input.features = c(\"g7\", \"gNC\"),   output.feature = \"sample.grna\" ) }"},{"path":"http://joeymays.xyz/CNweaveR/reference/corner.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the top-left corner of a matrix — corner","title":"Print the top-left corner of a matrix — corner","text":"Outputs 5 rows columns input matrix object (rownames colnames) get quick look without filling console.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/corner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the top-left corner of a matrix — corner","text":"","code":"corner(input.mat)"},{"path":"http://joeymays.xyz/CNweaveR/reference/corner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the top-left corner of a matrix — corner","text":"input.mat matrix-like object.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/corner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the top-left corner of a matrix — corner","text":"matrix-like object matching input class, subset maximum 5 rows columns.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/corner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print the top-left corner of a matrix — corner","text":"","code":"if (FALSE) { corner(assay(TapestriObject)) }"},{"path":"http://joeymays.xyz/CNweaveR/reference/countBarcodedReads.html","id":null,"dir":"Reference","previous_headings":"","what":"Get read counts from barcoded reads — countBarcodedReads","title":"Get read counts from barcoded reads — countBarcodedReads","text":"countBarcodedReads() countBarcodedReadsFromContig() match exogenous DNA barcode sequences associated cell barcodes saves colData (cell barcode metadata) TapestriExperiment. countBarcodedReads() shortcut countBarcodedReadsFromContig(), allowing user specify 'gRNA' 'barcode' use grnaCounts barcodeCounts altExp slots. entries barcode.lookup table present sample, allowing users keep one master table/file available barcode sequences use experiments.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/countBarcodedReads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get read counts from barcoded reads — countBarcodedReads","text":"","code":"countBarcodedReads(   TapestriExperiment,   bam.file,   barcode.lookup,   probe,   return.table = FALSE,   max.mismatch = 2,   with.indels = FALSE,   ... )  countBarcodedReadsFromContig(   bam.file,   barcode.lookup,   contig,   cell.barcode.tag = \"RG\",   max.mismatch = 2,   with.indels = FALSE )"},{"path":"http://joeymays.xyz/CNweaveR/reference/countBarcodedReads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get read counts from barcoded reads — countBarcodedReads","text":"TapestriExperiment TapestriExperiment object bam.file File path BAM file. .bai BAM index file must location (can generated using Rsamtools::indexBam()). barcode.lookup data.frame first column barcode identifier/name second column DNA sequence. Headers ignored. probe Character, either \"gRNA\" \"barcode\" parse counts grnaCounts barcodeCounts altExp slots, respectively. return.table Logical, TRUE, returns table read counts per barcode. FALSE, returns TapestriExperiment. Default FALSE. max.mismatch Numeric, maximum minimum number mismatching letters allowed. Default 2. .indels TRUE, indels allowed. Default FALSE. ... Arguments pass countBarcodedReadsFromContig(). contig Character, contig chromosome name search barcodes . Can vector one contig expand search space. cell.barcode.tag Character length 2, indicates cell barcode field BAM, specified Tapestri pipeline (currently \"RG\"). Default \"RG\".","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/countBarcodedReads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get read counts from barcoded reads — countBarcodedReads","text":"TapestriExperiment barcoded read counts added colData. data.frame read counts specified barcode.","code":""},{"path":[]},{"path":"http://joeymays.xyz/CNweaveR/reference/countBarcodedReads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get read counts from barcoded reads — countBarcodedReads","text":"","code":"if (FALSE) { counts <- countBarcodedReads(   TapestriExperiment,   bam.file, barcode.lookup, \"gRNA\" ) } if (FALSE) { counts <- countBarcodedReadsFromContig(bam.file, barcode.lookup, \"virus_ref2\") }"},{"path":"http://joeymays.xyz/CNweaveR/reference/getChrOrder.html","id":null,"dir":"Reference","previous_headings":"","what":"Get chromosome order from a string of chromosome/contig names — getChrOrder","title":"Get chromosome order from a string of chromosome/contig names — getChrOrder","text":"getChrOrder() takes string chromosome contig names returns indices string typical chromosome order, .e. 1 22, X, Y. Contig names match 1:22, X, Y sorted numerically alphabetically (numbers coming first), added end order. output string can used sort input string typical chromosome order.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/getChrOrder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get chromosome order from a string of chromosome/contig names — getChrOrder","text":"","code":"getChrOrder(chr.vector)"},{"path":"http://joeymays.xyz/CNweaveR/reference/getChrOrder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get chromosome order from a string of chromosome/contig names — getChrOrder","text":"chr.vector Character vector chromosome contig names.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/getChrOrder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get chromosome order from a string of chromosome/contig names — getChrOrder","text":"numerical vector input vectors indices chromosome order.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/getChrOrder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get chromosome order from a string of chromosome/contig names — getChrOrder","text":"","code":"chr.order <- getChrOrder(c(1, \"virus\", 5, \"X\", 22, \"plasmid\", \"Y\")) ordered.vector <- c(1, \"virus\", 5, \"X\", 22, \"plasmid\", \"Y\")[chr.order]"},{"path":"http://joeymays.xyz/CNweaveR/reference/getCytobands.html","id":null,"dir":"Reference","previous_headings":"","what":"Add chromosome cytobands and chromosome arms to TapestriExperiment — getCytobands","title":"Add chromosome cytobands and chromosome arms to TapestriExperiment — getCytobands","text":"getCytobands() retrieves chromosome arm cytoband probe based stored positional data saves rowData. run automatically part createTapestriExperiment(). Note: downstream smoothing plotting functions may fail chromosome arms present rowData.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/getCytobands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add chromosome cytobands and chromosome arms to TapestriExperiment — getCytobands","text":"","code":"getCytobands(TapestriExperiment, genome = \"hg19\", verbose = TRUE)"},{"path":"http://joeymays.xyz/CNweaveR/reference/getCytobands.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add chromosome cytobands and chromosome arms to TapestriExperiment — getCytobands","text":"TapestriExperiment TapestriExperiment object. genome Character, reference genome use. hg19 currently supported. verbose Logical, TRUE (default), progress output message text.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/getCytobands.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add chromosome cytobands and chromosome arms to TapestriExperiment — getCytobands","text":"TapestriExperiment object rowData updated include chromosome arms cytobands.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/getCytobands.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add chromosome cytobands and chromosome arms to TapestriExperiment — getCytobands","text":"","code":"if (FALSE) { tapObject <- getCytobands(tapObject, genome = \"hg19\") }"},{"path":"http://joeymays.xyz/CNweaveR/reference/getGMMBoundaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate decision boundaries between components of copy number GMMs\n#' — getGMMBoundaries","title":"Calculate decision boundaries between components of copy number GMMs\n#' — getGMMBoundaries","text":"Calculate decision boundaries components copy number GMMs #'","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/getGMMBoundaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate decision boundaries between components of copy number GMMs\n#' — getGMMBoundaries","text":"","code":"getGMMBoundaries(TapestriExperiment, chromosome.scope = \"chr\")"},{"path":"http://joeymays.xyz/CNweaveR/reference/getGMMBoundaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate decision boundaries between components of copy number GMMs\n#' — getGMMBoundaries","text":"TapestriExperiment TapestriExperiment object. chromosome.scope \"chr\" \"arm\", using models either whole chromosomes chromosome arms. Default \"chr\".","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/getGMMBoundaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate decision boundaries between components of copy number GMMs\n#' — getGMMBoundaries","text":"tibble containing boundary values GMMs feature.id.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/getGMMBoundaries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate decision boundaries between components of copy number GMMs\n#' — getGMMBoundaries","text":"","code":"if (FALSE) { control.copy.number <- generateControlCopyNumberTemplate(TapestriExperiment, 2) boundaries <- getGMMBoundaries(TapestriExperiment,   chromosome.scope = \"chr\" ) }"},{"path":"http://joeymays.xyz/CNweaveR/reference/getTidyData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get tidy-style data from TapestriExperiment objects — getTidyData","title":"Get tidy-style data from TapestriExperiment objects — getTidyData","text":"getTidyData() pulls data indicated assay /altExp slot(s), rearranges tidy format. colData (cell metadata) top-level/main experiment included. rowData (probe metadata) indicated assay /altExp slot(s) included. Attempts made sort \"chr\" \"start.pos\" columns present simplify plotting downstream operations.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/getTidyData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get tidy-style data from TapestriExperiment objects — getTidyData","text":"","code":"getTidyData(   TapestriExperiment,   alt.exp = NULL,   assay = NULL,   feature.id.as.factor = TRUE )"},{"path":"http://joeymays.xyz/CNweaveR/reference/getTidyData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get tidy-style data from TapestriExperiment objects — getTidyData","text":"TapestriExperiment TapestriExperiment object. alt.exp Character, altExp slot use. NULL (default) uses top-level/main experiment. assay Character, assay slot use. NULL (default) uses first-indexed assay (often \"counts\"). feature.id..factor Logical, TRUE (default), feature.id column returned factor.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/getTidyData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get tidy-style data from TapestriExperiment objects — getTidyData","text":"tibble tidy data corresponding metadata colData rowData.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/getTidyData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get tidy-style data from TapestriExperiment objects — getTidyData","text":"","code":"if (FALSE) { getTidyData(TapestriObject, alt.exp = \"alleleFrequency\") }"},{"path":"http://joeymays.xyz/CNweaveR/reference/moveNonGenomeProbes.html","id":null,"dir":"Reference","previous_headings":"","what":"Move non-genome probes counts and metadata to altExp slots — moveNonGenomeProbes","title":"Move non-genome probes counts and metadata to altExp slots — moveNonGenomeProbes","text":"moveNonGenomeProbes() takes probe IDs corresponding grnaProbe barcodeProbe slots TapestriExperiment object, well probes chrY, moves altExp slots object. allows counts associated metadata manipulated separately without interfering probes used CNV measurements target endogenous genome. SingleCellExperiment::splitAltExps() can used manual specification probes move altExp slots shortcut slots used.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/moveNonGenomeProbes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move non-genome probes counts and metadata to altExp slots — moveNonGenomeProbes","text":"","code":"moveNonGenomeProbes(TapestriExperiment)"},{"path":"http://joeymays.xyz/CNweaveR/reference/moveNonGenomeProbes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move non-genome probes counts and metadata to altExp slots — moveNonGenomeProbes","text":"TapestriExperiment TapestriExperiment object.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/moveNonGenomeProbes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move non-genome probes counts and metadata to altExp slots — moveNonGenomeProbes","text":"TapestriExperiment altExp slots filled counts metadata non-genomic probes.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/moveNonGenomeProbes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Move non-genome probes counts and metadata to altExp slots — moveNonGenomeProbes","text":"moveNonGenomeProbes() moves probes corresponding specified tags altExp (alternative experiment) slots TapestriExperiment object. probes correspond chromosome therefore used call copy number variants. exception probes chromosome Y; CNVs chrY rare, move altExp separate analysis. Probes corresponding barcodeProbe grnaProbe slots, specified panel.id shortcut manually (see Custom Slot Getters Setters), automatically moved altExp operation well. probes present, function generate warning message, always safe (recommended) run default. remaining probes targeting human chromosome specified shortcut tags moved otherProbeCounts slot. function run automatically default default behavior part createTapestriExperiment().","code":""},{"path":[]},{"path":"http://joeymays.xyz/CNweaveR/reference/moveNonGenomeProbes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Move non-genome probes counts and metadata to altExp slots — moveNonGenomeProbes","text":"","code":"if (FALSE) { tapObject <- moveNonGenomeProbes(tapObject) }"},{"path":"http://joeymays.xyz/CNweaveR/reference/newTapestriExperimentExample.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Example TapestriExperiment — newTapestriExperimentExample","title":"Create Example TapestriExperiment — newTapestriExperimentExample","text":"Creates TapestriExperiment object demonstration purposes, includes 240 probes across genome, 300 cells 3 types. Raw counts generated randomly. Type 1 75 cells, XY, diploid. Type 2 100 cells, XX, 3 copies chr 7, otherwise diploid. Type 3 125 cells, XY, 1 copy chr 1p, otherwise diploid.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/newTapestriExperimentExample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Example TapestriExperiment — newTapestriExperimentExample","text":"","code":"newTapestriExperimentExample()"},{"path":"http://joeymays.xyz/CNweaveR/reference/newTapestriExperimentExample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Example TapestriExperiment — newTapestriExperimentExample","text":"TapestriExperiment object.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/newTapestriExperimentExample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Example TapestriExperiment — newTapestriExperimentExample","text":"","code":"tapExperiment <- newTapestriExperimentExample() #> ℹ Moving gRNA probe  to altExp slot 'grnaCounts'. #> ℹ Moving barcode probe  to altExp slot 'barcodeCounts'. #> ℹ Moving chrY probe(s) probe_231, probe_232, probe_233, probe_234, probe_235, probe_236, probe_237, probe_238, probe_239, probe_240 to altExp slot 'chrYCounts'."},{"path":"http://joeymays.xyz/CNweaveR/reference/plotCopyNumberGMM.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot copy number GMM components — plotCopyNumberGMM","title":"Plot copy number GMM components — plotCopyNumberGMM","text":"Plots probability densities GMM components given chromosome chromosome arm, store TapestriExperiment. calcGMMCopyNumber() must run first.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/plotCopyNumberGMM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot copy number GMM components — plotCopyNumberGMM","text":"","code":"plotCopyNumberGMM(   TapestriExperiment,   feature.id = 1,   chromosome.scope = \"chr\",   draw.boundaries = FALSE )"},{"path":"http://joeymays.xyz/CNweaveR/reference/plotCopyNumberGMM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot copy number GMM components — plotCopyNumberGMM","text":"TapestriExperiment TapestriExperiment object. feature.id chromosome chromosome arm plot. chromosome.scope \"chr\" \"arm\", plotting models either whole chromosomes chromosome arms. draw.boundaries logical, TRUE, draw decision boundaries Gaussian component.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/plotCopyNumberGMM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot copy number GMM components — plotCopyNumberGMM","text":"ggplot object","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/plotCopyNumberGMM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot copy number GMM components — plotCopyNumberGMM","text":"","code":"if (FALSE) { TapestriExperiment <- plotCopyNumberGMM(TapestriExperiment,   feature.id = 7,   chromosome.scope = \"chr\",   draw.boundaries = TRUE ) }"},{"path":"http://joeymays.xyz/CNweaveR/reference/reducedDimPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatter plot for dimensional reduction results — reducedDimPlot","title":"Scatter plot for dimensional reduction results — reducedDimPlot","text":"Plots scatter plot indicated dimensional reduction results.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/reducedDimPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatter plot for dimensional reduction results — reducedDimPlot","text":"","code":"reducedDimPlot(   TapestriExperiment,   alt.exp = \"alleleFrequency\",   dim.reduction,   dim.x = 1,   dim.y = 2,   group.label = NULL )"},{"path":"http://joeymays.xyz/CNweaveR/reference/reducedDimPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatter plot for dimensional reduction results — reducedDimPlot","text":"TapestriExperiment TapestriExperiment object alt.exp Character, altExp use, NULL uses top-level/main experiment. Default \"alleleFrequency\". dim.reduction Character, dimension reduction plot, either \"PCA\" \"UMAP\". dim.x Numeric, index dimensional reduction data plot X axis. Default 1. dim.y Numeric, index dimensional reduction data plot Y axis. Default 2. group.label Character, colData column grouping samples color. Default NULL.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/reducedDimPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scatter plot for dimensional reduction results — reducedDimPlot","text":"ggplot2 object, scatter plot","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/reducedDimPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatter plot for dimensional reduction results — reducedDimPlot","text":"","code":"if (FALSE) { reducedDimPlot(TapestriExperiment, dim.reduction = \"pca\") }"},{"path":"http://joeymays.xyz/CNweaveR/reference/runClustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster 2D data — runClustering","title":"Cluster 2D data — runClustering","text":"Clusters data using dbscan method saves cluster assignments cell barcode colData. Generally used assign clusters UMAP projection PCA UMAP dimensional reduction.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/runClustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster 2D data — runClustering","text":"","code":"runClustering(   TapestriExperiment,   alt.exp = \"alleleFrequency\",   dim.reduction = \"UMAP\",   eps = 0.8,   dim.1 = 1,   dim.2 = 2,   ... )"},{"path":"http://joeymays.xyz/CNweaveR/reference/runClustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster 2D data — runClustering","text":"TapestriExperiment TapestriExperiment object alt.exp Character, altExp slot use. NULL uses top-level/main experiment. Default \"alleleFrequency\". dim.reduction Character, reduced dimension data use. Default \"UMAP\". eps Numeric, dbscan eps parameter. Lower increase cluster granularity. See dbscan::dbscan(). Default 0.8. dim.1 Numeric, index data dimension use. Default 1. dim.2 Numeric, index data dimension use. Default 2. ... Additional parameters pass dbscan::dbscan().","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/runClustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster 2D data — runClustering","text":"TapestriExperiment object updated colData containing cluster assignments.","code":""},{"path":[]},{"path":"http://joeymays.xyz/CNweaveR/reference/runClustering.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster 2D data — runClustering","text":"","code":"if (FALSE) { TapestriExperiment <- runClustering(TapestriExperiment,   dim.reduction = \"UMAP\", eps = 0.8 ) }"},{"path":"http://joeymays.xyz/CNweaveR/reference/runPCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster assay data by Principal Components Analysis — runPCA","title":"Cluster assay data by Principal Components Analysis — runPCA","text":"Analyzes assay data Principal Components Analysis (PCA) saves results reducedDims slot TapestriObject.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/runPCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster assay data by Principal Components Analysis — runPCA","text":"","code":"runPCA(   TapestriExperiment,   alt.exp = \"alleleFrequency\",   assay = NULL,   sd.min.threshold = NULL,   center = TRUE,   scale. = TRUE )"},{"path":"http://joeymays.xyz/CNweaveR/reference/runPCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster assay data by Principal Components Analysis — runPCA","text":"TapestriExperiment TapestriExperiment object alt.exp Character, altExp use, NULL uses top-level/main experiment. Default \"alleleFrequency\". assay Character, assay use. NULL (default) uses first-indexed assay. sd.min.threshold Numeric, minimum threshold allelefreq.sd. Increase run PCA fewer, variable dimensions. Set NULL using alleleFrequency slot. Default NULL. center Logical, TRUE (default), variables shifted zero centered. See stats::prcomp(). scale. Logical,TRUE (default), variables scaled unit variance prior PCA. See stats::prcomp().","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/runPCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster assay data by Principal Components Analysis — runPCA","text":"TapestriExperiment PCA results saved reducedDims slot altExp, proportion variance explained PC saved metadata slot altExp.","code":""},{"path":[]},{"path":"http://joeymays.xyz/CNweaveR/reference/runPCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster assay data by Principal Components Analysis — runPCA","text":"","code":"if (FALSE) { TapestriExperiment <- runPCA(TapestriExperiment,   alt.exp = \"alleleFrequency\", sd.min.threshold = 35 ) }"},{"path":"http://joeymays.xyz/CNweaveR/reference/runUMAP.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster matrix data by UMAP — runUMAP","title":"Cluster matrix data by UMAP — runUMAP","text":"Analyzes matrix data UMAP saves results reducedDims slot TapestriObject.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/runUMAP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster matrix data by UMAP — runUMAP","text":"","code":"runUMAP(   TapestriExperiment,   alt.exp = \"alleleFrequency\",   assay = NULL,   use.pca.dims = TRUE,   pca.dims = NULL,   ... )"},{"path":"http://joeymays.xyz/CNweaveR/reference/runUMAP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster matrix data by UMAP — runUMAP","text":"TapestriExperiment TapestriExperiment object alt.exp Character, altExp use, NULL uses top-level/main experiment. Default \"alleleFrequency\". assay Character, assay use. NULL (default) uses first-indexed assay. used use.pca.dims = TRUE. use.pca.dims Logical, TRUE, uses experiment PCA, otherwise uses assay data. Default TRUE. pca.dims Numeric, indices PCs use UMAP. Default NULL. ... Additional parameters pass umap::umap(), e.g. configuration (see umap::umap.defaults()).","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/runUMAP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster matrix data by UMAP — runUMAP","text":"TapestriExperiment UMAP embeddings saved reducedDims slot altExp.","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/runUMAP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster matrix data by UMAP — runUMAP","text":"","code":"if (FALSE) { TapestriExperiment <- runUMAP(TapestriExperiment, input.dims = 1:3) }"},{"path":"http://joeymays.xyz/CNweaveR/reference/slotGettersSetters.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter and Setter functions for TapestriExperiment slots — Custom Slot Getters and Setters","title":"Getter and Setter functions for TapestriExperiment slots — Custom Slot Getters and Setters","text":"Get set custom slots TapestriExperiment. Currently supported slots barcodeProbe sample barcode probe ID grnaProbe gRNA-associated probe ID. used shortcuts moveNonGenomeProbes() countBarcodedReads().","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/slotGettersSetters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter and Setter functions for TapestriExperiment slots — Custom Slot Getters and Setters","text":"","code":"barcodeProbe(x)  # S4 method for TapestriExperiment barcodeProbe(x)  barcodeProbe(x) <- value  # S4 method for TapestriExperiment barcodeProbe(x) <- value  grnaProbe(x)  # S4 method for TapestriExperiment grnaProbe(x)  grnaProbe(x) <- value  # S4 method for TapestriExperiment grnaProbe(x) <- value"},{"path":"http://joeymays.xyz/CNweaveR/reference/slotGettersSetters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter and Setter functions for TapestriExperiment slots — Custom Slot Getters and Setters","text":"x TapestriExperiment object value Character, probe ID assign slot TapestriExperiment TapestriExperiment object","code":""},{"path":"http://joeymays.xyz/CNweaveR/reference/slotGettersSetters.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Getter and Setter functions for TapestriExperiment slots — Custom Slot Getters and Setters","text":"barcodeProbe(TapestriExperiment): barcodeProbe getter barcodeProbe(TapestriExperiment) <- value: barcodeProbe setter grnaProbe(TapestriExperiment): grnaProbe getter grnaProbe(TapestriExperiment) <- value: grnaProbe setter","code":""}]
